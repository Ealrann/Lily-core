@GenModel(modelDirectory="/org.sheepy.common.model/src/generated/java")
@GenModel(editDirectory="/org.sheepy.common.model.edit/src/generated/java")
@GenModel(publicConstructors="true", complianceLevel="11.0", resource="XMI")
@GenModel(extensibleProviderFactory="true", childCreationExtenders="true")
@GenModel(updateClasspath="false")

package org.sheepy.common.model.ui

import org.sheepy.common.model.action.Action
import org.sheepy.common.model.action.ActionList
import org.sheepy.common.model.application.IView
import org.sheepy.common.model.presentation.IControl
import org.sheepy.common.model.root.LObject
import org.sheepy.common.model.types.EKeyState
import org.sheepy.common.model.variable.AbstractVariableResolver
import org.sheepy.common.model.presentation.Widget

abstract class AbstractLabel extends org.sheepy.common.model.presentation.Widget
{
	String text = ""
	float fontScale = "1"
}

class DynamicRowLayout extends IControl
{
	int height = "16"
	int columnCount
}

class VariableLabel extends AbstractLabel
{
	contains AbstractVariableResolver variableResolver
}

class Label extends AbstractLabel
{
}

class TextField extends Widget
{
	contains AbstractVariableResolver variableResolver
}

abstract class AbstractButton extends Widget
{
	String text = ""
}

class Button extends AbstractButton
{
	int shortcut
	EKeyState state

	contains Action[] actions
	
	op ActionList lActions()
	{
		actions
	}
	
	// Will execute actions on the view
	op LObject getExecutor()
	{
		var LObject unit = this
		
		while(unit instanceof IView == false)
			unit = unit.lParent
		
		return unit
	}
}

abstract class AbstractBooleanButton extends AbstractButton
{
	String textWhenTrue
	String textWhenFalse
}

class BooleanButton extends AbstractBooleanButton
{
	contains AbstractVariableResolver variableResolver
}

class BooleanActionButton extends AbstractBooleanButton
{
	contains Action actionWhenTrue
	contains Action actionWhenFalse
}
